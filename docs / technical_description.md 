## Цель проекта

Разработать систему по автоматизации обрабоки заявок
для записи клиентов в салон (салоны) красоты
Обеспечить возможность записи к мастеру через телеграм бота.
Обеспечить API для дальнейшей разарбки приложений.
Необходимо создать простой сайт для администрирования записей.

## Структура проекта

1. Web саит;
2. API сервиса;
3. Telegrtam-bot.

## Структура Администрирования Django 

Необходимо, чтобы пользователь мог просматривать сайт в целях
получения информации о салоне красоты, его мастерах, 
узнавать расписание мастеров, услуги мастеров, 
режим работы того или иного мастреа.

Только зарегистрированый пользователь может записаться к мастерам на 
процедуры, необходимо предусмотреть, чтобы пользователь не мог записаться 
на время не соответствующее режиму работы салона красоты.

Во время записи пользователя к мастеру (мастерам):
1. Должны быть реализована проверка записи на процедуру, которая может 
   накладываться на начало другой процедуры;
2. Подбор другого мастера если у данного мастера, в данное время нету 
   возможности принять клиента;
3. Подбор мастера по уровню профессионализма;
4. Должны быть реализован уточняющие вопросы для получения среднего 
   возможного времени процедуры, чтобы правильно составить расписание мастера.
5. Должна быть реализована возможность регулированя времени рабочего дня 
   для каждого мастра.

### Модели 

По возможности необходимо прорабоать модели на данном этапе, чтобы потом не 
переделывать большую чатсь логики приложения.
```
Модель Пользователя
```
1. Username
2. name
3. lastname 
4. prof_level - уровень мастера
Пользователи делятся на 3 группы (админ, мастер, пользователь (клиент)). В 
зависимости от того к какой группе отнситься User, должны быть заложены  
определённые возможные действия. Администратор (admin) - может удалять 
пользователей, изменять время на процедуры, менять записи к мастерам. 
Изменять расписание мастеров.
Пользователь (user) - может просматривать свои записи к мастерам, может 
записываться к мастерам.
Мастер (master) - может тоже самое что и пользователь, но только может 
редактировать своё расписание и удалять записи в своём расписании.
```
Модель Процедуры
```
1. procedure_name - название процедуры
2. duration - продолжительность процедуры (среднее время продолжительности)
3. cost - цена (Примерна цена процедуры)
```
Модель записи 
```
1. master - модель пользователя мастера
2. time - время на начало процедуры
3. procedure - название процедуры 
4. data - дата процедуры 
5. client - модель пользователя клиента взять из тела запроса 
```
Модель Расписания 
```
1. master - модель пользователя мастер 
2. time - расписание записей на определённую дату
3. data - дата  
4. procedure - название процедуры 
5. client - модель пользователя клиента 
